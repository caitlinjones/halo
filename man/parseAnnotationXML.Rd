% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial.R
\name{parseAnnotationXML}
\alias{parseAnnotationXML}
\title{Recursively process an XML node for one FOV}
\usage{
parseAnnotationXML(node, fovName = NULL, outFile = NULL, LineColor = "",
  Name = "", Visible = "", RegionType = "", HasEndcaps = 0,
  NegativeROA = 0, v = FALSE, lf = NULL, debug = FALSE)
}
\arguments{
\item{node}{object of class XMLNode containing Halo annotations for one FOV}

\item{fovName}{unique identifier of FOV}

\item{outFile}{output file}

\item{LineColor}{code for line color of the annotation ["655280"|"65535"|"255"]}

\item{Name}{name of the annotation}

\item{Visible}{logical indicating whether annotation is visible [????]}

\item{RegionType}{region type *Note: any region with type other than Polygon is skipped}

\item{HasEndcaps}{[???]}

\item{NegativeROA}{[???]}

\item{v}{verbose; print extra status messages; default=FALSE}

\item{lf}{log file; default=NULL}

\item{debug}{logical indicating whether to print debug statements}

\item{regionNum}{current region number}

\item{annotationNum}{current annotation number}
}
\value{
nothing
}
\description{
Visit each node in an object of class XMLNode and gather information
to print one line for each vertex which represents the location of a cell
on the slide [NOTE: DOUBLE CHECK THIS FOR ACCURACY]
}
\details{
Output is a tab-delimited file containing: 
    1)  FOV name
    2)  Annotation number
    3)  Line color
    4)  Name
    5)  Visible
    6)  Region number
    7)  Region type
    8)  HasEndcaps
    9)  NegativeROA
    10) X coordinate
    11) Y coordinate ***(negative of what is output by Halo)***
    12) Region according to color (Tumor, Exclusion, Epidermis)
}
