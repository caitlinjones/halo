# Generated by roxygen2: do not edit by hand

export(OLD_calculateInfiltrationDensity)
export(assignCellType)
export(calcDistancesFromTumorBoundary)
export(calculateAreaTotalFOV)
export(calculateInfiltrationDensity)
export(calculateInterfaceArea)
export(calculateMarkerDensityTotalFOV)
export(cellDive.calculateInfiltrationArea)
export(cellDive.calculateInfiltrationDensity)
export(cellDive.calculateTotalFOVarea)
export(cellDive.calculateTotalFOVdensity)
export(cellDive.fillInMarkerComboInterpretations)
export(cellDive.getAllBoundaryAnnotations)
export(cellDive.initCombinedProject)
export(cellDive.loadAllData)
export(cellDive.loadStudyAnnotations)
export(cellDive.markExclusions)
export(cellDive.updateManifest)
export(cellDive.writeMarkerComboTables)
export(configureStudy)
export(countMarkers)
export(flattenMetaData)
export(getAllCellTypeCombinations)
export(getAllCombos)
export(getAllFOVDensityValues)
export(getAllInfiltrationDensityValues)
export(getAllInfiltrationPlots)
export(getAllTotalFOVPlots)
export(getCellTypes)
export(getCustomColors)
export(getInfiltrationDensitySummary)
export(getMarkerColors)
export(getMarkerConfig)
export(getMarkerDensityTable)
export(getPlotTheme)
export(getSampleBandMaxY)
export(getTemplateCellTypeConfig)
export(getTemplatePlotConfig)
export(initializeProject)
export(loadHalo)
export(logParams)
export(makeDensityHeatmap)
export(makeSampleInfiltrationDensityPlots)
export(makeSampleTotalFOVDensityPlots)
export(markExclusions)
export(markerComboXLSX)
export(markerStatsFile)
export(plotCellTypeLocations)
export(plotExclusions)
export(plotInfiltrationDensity)
export(plotMarkerPercentages)
export(plotTotalFOVMarkerDensity)
export(printInfiltrationDensityPlots)
export(printTotalFOVDensityPlots)
export(projectFileName)
export(readHaloAnnotations)
export(removeExtraMarkers)
export(sampleInfiltrationPlotsSingleFile)
export(splitByFov)
export(stackable)
export(summarizeByCellTypeDefinition)
export(summarizeFOVDataByCellTypeDefinition)
export(trimImage)
export(validateConfig)
export(validateExclusions)
export(validateSingleFOVFile)
